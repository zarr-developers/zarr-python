# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  windows:
    name: Windows Tests
    runs-on: "windows-latest"
    strategy:
      fail-fast: True
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      - name: Create Conda environment with the rights deps
        shell: bash -l {0}
        run: |
          conda create -n zarr-env python==${{matrix.python-version}} numcodecs pip nodejs
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda activate zarr-env
          python -m pip install --upgrade pip
          python -m pip install -U pip setuptools wheel
          python -m pip install -r requirements_dev_numpy.txt -r requirements_dev_minimal.txt -r requirements_dev_optional.txt
          python -m pip install .
          python -m pip freeze
          npm install -g azurite
      - name: Run Tests
        shell: bash -l {0}
        run: |
          conda activate zarr-env
          mkdir ~/blob_emulator
          azurite -l ~/blob_emulator --debug debug.log 2>&1 > stdouterr.log &
          pytest -sv --timeout=300
        env:
          ZARR_TEST_ABS: 1
          ZARR_V3_EXPERIMENTAL_API: 1
      - name: Conda info
        shell: bash -l {0}
        run: conda info
      - name: Conda list
        shell: pwsh
        run: conda list

