# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: os=${{ matrix.os }}, py=${{ matrix.python-version }}, np=${{ matrix.numpy-version }}, deps=${{ matrix.dependency-set }}

    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']
        numpy-version: ['1.25', '2.1']
        dependency-set: ["minimal", "optional"]
        os: ["ubuntu-latest"]
        include:
          - python-version: '3.11'
            numpy-version: '1.25'
            dependency-set: 'optional'
            os: 'macos-latest'
          - python-version: '3.13'
            numpy-version: '2.1'
            dependency-set: 'optional'
            os: 'macos-latest'
          - python-version: '3.11'
            numpy-version: '1.25'
            dependency-set: 'optional'
            os: 'windows-latest'
          - python-version: '3.13'
            numpy-version: '2.1'
            dependency-set: 'optional'
            os: 'windows-latest'
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install Hatch
      run: |
        python -m pip install --upgrade pip 
        pip install hatch
    - name: Set Up Hatch Env
      run: |
        hatch env create test.py${{ matrix.python-version }}-${{ matrix.numpy-version }}-${{ matrix.dependency-set }}
        hatch env run -e test.py${{ matrix.python-version }}-${{ matrix.numpy-version }}-${{ matrix.dependency-set }} list-env
    - name: Run Tests
      run: |
        hatch env run --env test.py${{ matrix.python-version }}-${{ matrix.numpy-version }}-${{ matrix.dependency-set }} run

  test-upstream-and-min-deps:
    name: py=${{ matrix.python-version }}-${{ matrix.dependency-set }}

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', "3.13"]
        dependency-set: ["upstream", "min_deps"]
        exclude:
          - python-version: "3.13"
            dependency-set: min_deps
          - python-version: "3.11"
            dependency-set: upstream
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install Hatch
      run: |
        python -m pip install --upgrade pip 
        pip install hatch
    - name: Set Up Hatch Env
      run: |
        hatch env create ${{ matrix.dependency-set }}
        hatch env run -e ${{ matrix.dependency-set }} list-env
    - name: Run Tests
      run: |
        hatch env run --env ${{ matrix.dependency-set }} run

  test-complete:
    name: Test complete

    needs:
      [
        test,
        test-upstream-and-min-deps,
      ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check failure
        if: |
          contains(needs.*.result, 'failure') ||
          contains(needs.*.result, 'cancelled')
        run: exit 1
      - name: Success
        run: echo Success!