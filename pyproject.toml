[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "zarr"
description = "An implementation of chunked, compressed, N-dimensional arrays for Python"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [
    { name = "Alistair Miles", email = "alimanfoo@googlemail.com" },
]
maintainers = [
    { name = "Davis Bennett", email = "davis.v.bennett@gmail.com" },
    { name = "jakirkham" },
    { name = "Josh Moore", email = "josh@openmicroscopy.org" },
    { name = "Joe Hamman", email = "joe@earthmover.io" },
    { name = "Juan Nunez-Iglesias", email = "juan.nunez-iglesias@monash.edu" },
    { name = "Martin Durant", email = "mdurant@anaconda.com" },
    { name = "Norman Rzepka" },
    { name = "Ryan Abernathey" }
]
requires-python = ">=3.10"
# If you add a new dependency here, please also add it to .pre-commit-config.yml
dependencies = [
    'asciitree',
    'numpy>=1.24',
    'fasteners',
    'numcodecs>=0.10.0',
    'fsspec>2024',
    'crc32c',
    'zstandard',
    'typing_extensions',
    'donfig',
    'pytest'
]
dynamic = [
  "version",
]
classifiers = [
    'Development Status :: 6 - Mature',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Operating System :: Unix',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]
license = {text = "MIT License"}
keywords = ["Python", "compressed", "ndimensional-arrays", "zarr"]

[project.optional-dependencies]
jupyter = [
    'notebook',
    'ipytree>=0.2.2',
    'ipywidgets>=8.0.0',
]
docs = [
    'sphinx',
    'sphinx-autobuild>=2021.3.14',
    'sphinx-automodapi',
    'sphinx_design',
    'sphinx-issues',
    'sphinx-copybutton',
    'pydata-sphinx-theme',
    'numpydoc',
    'numcodecs[msgpack]',
    "msgpack",
    "lmdb",
]
extra = [
    'msgpack',
]
optional = [
    'lmdb',
]

[project.urls]
"Bug Tracker" = "https://github.com/zarr-developers/zarr-python/issues"
Changelog = "https://zarr.readthedocs.io/en/stable/release.html"
Discussions = "https://github.com/zarr-developers/zarr-python/discussions"
Documentation = "https://zarr.readthedocs.io/"
Homepage = "https://github.com/zarr-developers/zarr-python"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "pragma: ${PY_MAJOR_VERSION} no cover",
]

[tool.coverage.run]
omit = [
    "src/zarr/meta_v1.py",
    "bench/compress_normal.py",
]

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/zarr/_version.py"

[tool.hatch.envs.test]
dependencies = [
    "numpy~={matrix:numpy}",
]
extra-dependencies = [
    "coverage",
    "pytest",
    "pytest-cov",
    "msgpack",
    "lmdb",
    "s3fs",
    "pytest-asyncio",
    "moto[s3]",
    "flask-cors",
    "flask",
    "requests",
    "mypy"
]
features = ["extra"]

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11"]
numpy = ["1.24", "1.26", "2.0.0rc1"]
version = ["minimal"]

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11"]
numpy = ["1.24", "1.26", "2.0.0rc1"]
features = ["optional"]

[tool.hatch.envs.test.scripts]
run-coverage = "pytest --cov-config=pyproject.toml --cov=pkg --cov=tests"
run = "run-coverage --no-cov"
run-verbose = "run-coverage --verbose"
run-mypy = "mypy src"
list-env = "pip list"

[tool.hatch.envs.docs]
features = ['docs']

[tool.hatch.envs.docs.scripts]
build = "cd docs && make html"
serve = "sphinx-autobuild docs docs/_build --ignore 'docs/_autoapi/**/*' --host 0.0.0.0"

[tool.ruff]
line-length = 100
src = ["src"]
force-exclude = true
extend-exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
    "docs",
    "src/zarr/v2/",
    "tests/v2/",
]

[tool.ruff.lint]
extend-select = [
    "B",  # flake8-bugbear
    "I",  # isort
    "ISC",
    "UP",  # pyupgrade
    "RSE",
    "RUF",
]
ignore = [
    "RUF003",
    "RUF005",
    "RUF012",
    "RUF015",
]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
namespace_packages = false

strict = true
warn_unreachable = true

enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[[tool.mypy.overrides]]
module = [
    "zarr.v2.*",
]
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7"
testpaths = ["tests"]
log_cli_level = "INFO"
xfail_strict = true
asyncio_mode = "auto"
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "ELLIPSIS",
    "IGNORE_EXCEPTION_DETAIL",
]
addopts = [
    "--durations=10", "-ra", "--strict-config", "--strict-markers",
]
filterwarnings = [
    "error:::zarr.*",
    "ignore:PY_SSIZE_T_CLEAN will be required.*:DeprecationWarning",
    "ignore:The loop argument is deprecated since Python 3.8.*:DeprecationWarning",
]
