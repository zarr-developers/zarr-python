[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "zarr"
description = "An implementation of chunked, compressed, N-dimensional arrays for Python"
readme = { file = "README.md", content-type = "text/markdown" }
maintainers = [
    { name = "Alistair Miles", email = "alimanfoo@googlemail.com" }
]
requires-python = ">=3.10"
dependencies = [
    'asciitree',
    'numpy>=1.24',
    'fasteners',
    'numcodecs>=0.10.0',
]
dynamic = [
  "version",
]
classifiers = [
    'Development Status :: 6 - Mature',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Operating System :: Unix',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]
license = "MIT"

[project.optional-dependencies]
jupyter = [
    'notebook',
    'ipytree>=0.2.2',
    'ipywidgets>=8.0.0',
]
docs = [
    'sphinx',
    'sphinx-autobuild>=2021.3.14',
    'sphinx-automodapi',
    'sphinx_design',
    'sphinx-issues',
    'sphinx-copybutton',
    'pydata-sphinx-theme',
    'numpydoc',
    'numcodecs[msgpack]',
    "msgpack",
    "lmdb",
    "zstandard",
    "crc32c",
]
extra = [
    'attrs',
    'cattrs',
    'msgpack',
    'crc32c',
    'zstandard'
]
optional = [
    'lmdb',
]

[project.urls]
"Bug Tracker" = "https://github.com/zarr-developers/zarr-python/issues"
Changelog = "https://zarr.readthedocs.io/en/stable/release.html"
Discussions = "https://github.com/zarr-developers/zarr-python/discussions"
Documentation = "https://zarr.readthedocs.io/"
Homepage = "https://github.com/zarr-developers/zarr-python"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "pragma: ${PY_MAJOR_VERSION} no cover",
]

[tool.coverage.run]
omit = [
    "src/zarr/meta_v1.py",
    "bench/compress_normal.py",
]

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/zarr/_version.py"

[tool.hatch.envs.test]
extra-dependencies = [
    "coverage",
    "pytest",
    "pytest-cov",
    "msgpack",
    "lmdb",
    "zstandard",
    "crc32c",
    "pytest-asyncio",
    "typing_extensions",
    "mypy"
]
features = ["extra"]

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11"]
numpy = ["1.24", "1.26"]
version = ["minimal"]

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11"]
numpy = ["1.24", "1.26"]
features = ["optional"]

[tool.hatch.envs.test.scripts]
run-coverage = "pytest --cov-config=pyproject.toml --cov=pkg --cov=tests"
run = "run-coverage --no-cov"
run-verbose = "run-coverage --verbose"
run-mypy = "mypy src"

[tool.hatch.envs.docs]
features = ['docs']

[tool.hatch.envs.docs.scripts]
build = "sphinx-build docs/ docs/_build/"
rtd = "sphinx-build docs/ _readthedocs/html/"
serve = "sphinx-autobuild docs docs/_build --ignore 'docs/_autoapi/**/*' --host 0.0.0.0"

[tool.ruff]
line-length = 100
force-exclude = true
extend-exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
    "docs"
]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
namespace_packages = false

warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true
strict_concatenate = true

check_untyped_defs = true
disallow_untyped_decorators = true
disallow_any_generics = true

disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = [
    "zarr.v2._storage.store",
    "zarr.v2._storage.v3_storage_transformers",
    "zarr.group",
    "zarr.v2.core",
    "zarr.v2.hierarchy",
    "zarr.v2.indexing",
    "zarr.v2.storage",
    "zarr.v2.sync",
    "zarr.v2.util",
    "tests.*",
]
check_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "zarr.abc.codec",
    "zarr.codecs.bytes",
    "zarr.codecs.pipeline",
    "zarr.codecs.sharding",
    "zarr.codecs.transpose",
    "zarr.array_v2",
    "zarr.array",
    "zarr.sync",
    "zarr.v2.convenience",
    "zarr.v2.meta",
]
disallow_any_generics = false

[[tool.mypy.overrides]]
module = [
    "zarr.v2.*",
    "zarr.array_v2",
    "zarr.group"
]
disallow_incomplete_defs = false

[tool.pytest.ini_options]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "ELLIPSIS",
    "IGNORE_EXCEPTION_DETAIL",
]
addopts = [
    "--durations=10",
]
filterwarnings = [
    "error:::zarr.*",
    "ignore:PY_SSIZE_T_CLEAN will be required.*:DeprecationWarning",
    "ignore:The loop argument is deprecated since Python 3.8.*:DeprecationWarning",
]
